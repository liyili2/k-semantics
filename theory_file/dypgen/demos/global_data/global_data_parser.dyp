{ open Dyp
let global_data = 0
let global_data_equal = (=) }

%start main
%relation pi<pt<pp
%layout [' ' '\t']

%%

main: expr "\n"
  { Printf.printf "The parser made %d reductions for this interpretation.\n"
      dyp.global_data;
      $1 }

expr:
  | ['0'-'9']+
      @{ int_of_string $1, [Global_data (dyp.global_data+1)] } pi
  | expr(<=pp) "+" expr(<pp)
      @{ $1 + $3, [Global_data (dyp.global_data+1)] } pp
  | expr(<=pt) "*" expr(<pt)
      @{ $1 * $3, [Global_data (dyp.global_data+1)] } pt
